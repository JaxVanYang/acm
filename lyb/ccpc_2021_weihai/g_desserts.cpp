/* Generated by powerful Codeforces Tool
 * Author: Kenshin2438
 * Time: 2021-11-22 20:46:15
**/
 
#include <cstdio>
#include <cstring>
#include <cmath>
#include <ctime>
#include <cassert>
 
#include <algorithm>
#include <random>
#include <chrono>
#include <iostream>
#include <functional>
#include <bitset>
#include <vector>
#include <string>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <unordered_map>
 
#define PII pair<int, int>
#define vec vector
#define str string
#define fi first
#define se second
#define pb push_back
#define all(a) a.begin(), a.end()
using namespace std;
 
typedef long long ll;
typedef unsigned long long ull;
 
const int mod = 998244353;
const int N = 1e5 + 10;
const int inf = 0x3f3f3f3f;
const ll  INF = 1e18;
const double eps = 1e-8;
 
int T;
 
int n, m, fac[N], inv[N], cnt[N], ans[N];
 
void init(int n) {
  fac[0] = fac[1] = 1, inv[0] = inv[1] = 1;
  for (int i = 2; i <= n; i++) {
    fac[i] = 1LL * fac[i - 1] * i % mod;
    inv[i] = 1LL * inv[mod % i] * (mod - mod / i) % mod;
  }
  for (int i = 2; i <= n; i++) {
    inv[i] = 1LL * inv[i] * inv[i - 1] % mod;
  }
}
 
int qpow(int x, int n, int mod) {
  int res = 1;
  for (x %= mod; n; n >>= 1, x = 1LL * x * x % mod)
    if (n & 1) res = 1LL * res * x % mod;
  return res;
}
 
int C(int a, int b) {
  if (a <= b) return a == b;
  return 1LL * fac[a] * inv[b] % mod * inv[a - b] % mod;
}
 
int main() {
  ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
  cin >> n >> m; init(m);
  int mx = 0;
  for (int x, i = 1; i <= n; i++) {
    cin >> x; cnt[x]++; mx = max(mx, x);
  }
  vec<int> a;
  for (int i = 1; i <= mx; i++) {
    if (cnt[i]) a.emplace_back(i);
  }
  for (int i = mx; i <= m; i++) {
    ans[i] = [&](int p) -> int {
      int res = 1;
      for (int x : a) {
        res = 1LL * res * qpow(C(p, x), cnt[x], mod) % mod;
      }
      return res;
    }(i);
  }
  for (int i = 1; i <= m; i++) {
    cout << ans[i] << '\n';
  }
  return 0;
}